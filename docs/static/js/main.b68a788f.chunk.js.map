{"version":3,"sources":["AuthorizationClient.ts","Header.tsx","Visualization.ts","components/markers/SmartDeviceMarker.tsx","components/decorators/SmartDeviceDecorator.tsx","SmartDeviceAPI.ts","components/widgets/SmartDeviceWidgetListComponent.tsx","providers/SmartDeviceUIItemsProvider.tsx","App.tsx","serviceWorker.ts","index.tsx","Header.module.scss"],"names":["AuthorizationClient","this","_oidcClient","oidcConfiguration","clientId","process","redirectUri","postSignoutRedirectUri","scope","responseType","BrowserAuthorizationCallbackHandler","handleSigninCallback","BrowserAuthorizationClient","oidcClient","signIn","FrontendRequestContext","signInSilent","signOut","Header","loggedIn","handleLogin","handleLogout","className","styles","header","buttonContainer","button","onClick","buttonType","ButtonType","Primary","disabled","Visualization","hideHouseExterior","async","vp","toggle","categoryIds","getCategoryIds","iModel","changeCategoryDisplay","query","toString","result","row","push","id","SmartDeviceMarker","Marker","constructor","location","size","elementId","smartDeviceId","smartDeviceType","cloudData","super","_smartDeviceId","_smartDeviceType","setImageUrl","title","populateTitle","smartTableDiv","document","createElement","smartTable","key","value","Object","entries","innerHTML","onMouseButton","ev","isDown","IModelApp","notifications","outputMessage","NotifyMessageDetails","OutputMessagePriority","Info","viewManager","selectedView","zoomToElements","animateFrustumChange","standardViewId","StandardViewId","RightIso","SmartDeviceDecorator","_markerSet","addMarkers","results","UiFramework","getIModelConnection","values","getSmartDeviceData","SmartDeviceAPI","fetch","json","getData","forEach","smartDeviceMarker","x","origin","y","z","decorate","context","marker","addDecoration","SmartDeviceWidgetListComponent","smartTableList","setSmartTableList","useState","useEffect","groupedByType","tableList","_","devices","device","i","rowSpan","length","SmartDeviceUIItemsProvider","_toggleWalls","provideToolbarButtonItems","stageId","stageUsage","toolbarUsage","toolbarOrientation","toolbarButtonItems","StageUsage","General","ToolbarUsage","ContentManipulation","ToolbarOrientation","Vertical","toggleWallsButton","ToolbarItemUtilities","createActionButton","toggleMarkersButton","smartDeviceDecorator","decorators","find","dec","dropDecorator","addDecorator","provideWidgets","section","widgets","StagePanelLocation","Right","widget","label","getWidgetContent","App","isAuthorized","setIsAuthorized","isLoggingIn","setIsLoggingIn","initializeOidc","error","initOidc","catch","console","contextId","iModelId","authConfig","onIModelConnected","_imodel","log","name","onViewOpen","addOnce","overrideDisplayStyle","viewflags","visEdges","shadows","uiProviders","Boolean","window","hostname","match","ReactDOM","render","getElementById","unregister","navigator","serviceWorker","ready","then","registration","message","module","exports"],"mappings":"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","file":"static/js/main.b68a788f.chunk.js","sourcesContent":["import {\n  BrowserAuthorizationCallbackHandler,\n  BrowserAuthorizationClient,\n  BrowserAuthorizationClientConfiguration,\n} from \"@bentley/frontend-authorization-client\";\nimport { FrontendRequestContext } from \"@bentley/imodeljs-frontend\";\n\nclass AuthorizationClient {\n  private static _oidcClient: BrowserAuthorizationClient;\n\n  public static get oidcClient(): BrowserAuthorizationClient {\n    return this._oidcClient;\n  }\n\n  public static async initializeOidc(): Promise<void> {\n    if (this._oidcClient) {\n      return;\n    }\n\n    const scope = process.env.IMJS_AUTH_CLIENT_SCOPES ?? \"\";\n    const clientId = process.env.IMJS_AUTH_CLIENT_CLIENT_ID ?? \"\";\n    const redirectUri = process.env.IMJS_AUTH_CLIENT_REDIRECT_URI ?? \"\";\n    const postSignoutRedirectUri = process.env.IMJS_AUTH_CLIENT_LOGOUT_URI;\n\n    // authority is optional and will default to Production IMS\n    const oidcConfiguration: BrowserAuthorizationClientConfiguration = {\n      clientId,\n      redirectUri,\n      postSignoutRedirectUri,\n      scope,\n      responseType: \"code\",\n    };\n\n    await BrowserAuthorizationCallbackHandler.handleSigninCallback(\n      oidcConfiguration.redirectUri\n    );\n\n    this._oidcClient = new BrowserAuthorizationClient(oidcConfiguration);\n  }\n\n  public static async signIn(): Promise<void> {\n    await this.oidcClient.signIn(new FrontendRequestContext());\n  }\n\n  public static async signInSilent(): Promise<void> {\n    await this.oidcClient.signInSilent(new FrontendRequestContext());\n  }\n\n  public static async signOut(): Promise<void> {\n    await this.oidcClient.signOut(new FrontendRequestContext());\n  }\n}\n\nexport default AuthorizationClient;\n","import { Button, ButtonType } from \"@bentley/ui-core\";\nimport React from \"react\";\n\nimport styles from \"./Header.module.scss\";\n\ninterface HeaderProps {\n  handleLogin: () => void;\n  handleLogout: () => void;\n  loggedIn: boolean;\n}\n\nexport const Header: React.FC<HeaderProps> = ({\n  loggedIn,\n  handleLogin,\n  handleLogout,\n}: HeaderProps) => {\n  return (\n    <header className={styles.header}>\n      <div className={styles.buttonContainer}>\n        <Button\n          className={styles.button}\n          onClick={handleLogin}\n          buttonType={ButtonType.Primary}\n          disabled={loggedIn}\n        >\n          {\"Sign In\"}\n        </Button>\n        <Button\n          className={styles.button}\n          onClick={handleLogout}\n          buttonType={ButtonType.Primary}\n          disabled={!loggedIn}\n        >\n          {\"Sign Out\"}\n        </Button>\n      </div>\n    </header>\n  );\n};\n","import { IModelConnection, ScreenViewport } from \"@bentley/imodeljs-frontend\";\r\n\r\nexport default class Visualization{\r\n    public static hideHouseExterior = async (vp: ScreenViewport, toggle?: boolean)=>{\r\n        const categoryIds = await Visualization.getCategoryIds(vp.iModel);\r\n\r\n        if(toggle){\r\n\r\n          vp.changeCategoryDisplay(categoryIds, toggle);\r\n        }else{\r\n\r\n          vp.changeCategoryDisplay(categoryIds, false);\r\n        }\r\n    }\r\n\r\n    private static getCategoryIds = async (iModel: IModelConnection) =>{\r\n        const categoriesToHide = [\r\n            \"'Wall 1st'\", \"'Wall 2nd'\", \"'Dry Wall 1st'\", \"'Dry Wall 2nd'\",\r\n            \"'Brick Exterior'\", \"'Windows 1st'\", \"'Windows 2nd'\", \"'Ceiling 1st'\",\r\n            \"'Ceiling 2nd'\", \"'Callouts'\", \"'Roof'\", \"'light fixture'\"\r\n          ];\r\n    \r\n          const query = `select ECInstanceId from bis.category WHERE Codevalue IN (${categoriesToHide.toString()});`;\r\n    \r\n          const result = iModel.query(query);\r\n    \r\n          const categoryIds=[];\r\n          for await (const row of result){\r\n            categoryIds.push(row.id);\r\n          }\r\n\r\n          return categoryIds;\r\n    }\r\n}","import { XAndY, XYAndZ } from \"@bentley/geometry-core\";\r\nimport {\r\n  BeButtonEvent,\r\n  IModelApp,\r\n  Marker,\r\n  NotifyMessageDetails,\r\n  OutputMessagePriority,\r\n  StandardViewId,\r\n} from \"@bentley/imodeljs-frontend\";\r\n\r\nexport class SmartDeviceMarker extends Marker {\r\n  private elementId: string;\r\n  private _smartDeviceId: string;\r\n  private _smartDeviceType: string;\r\n\r\n  constructor(\r\n    location: XYAndZ,\r\n    size: XAndY,\r\n    elementId: string,\r\n    smartDeviceId: string,\r\n    smartDeviceType: string,\r\n    cloudData: any\r\n  ) {\r\n    super(location, size);\r\n    this.elementId = elementId;\r\n    this._smartDeviceId = smartDeviceId;\r\n    this._smartDeviceType = smartDeviceType;\r\n\r\n    this.setImageUrl(`/${this._smartDeviceType}.png`);\r\n    this.title = this.populateTitle(cloudData);\r\n  }\r\n\r\n  private populateTitle(cloudData: any) {\r\n    const smartTableDiv = document.createElement(\"div\");\r\n\r\n    let smartTable = \"\";\r\n    for (const [key, value] of Object.entries(cloudData)) {\r\n      smartTable += `\r\n            <tr>\r\n                <th>${key}</th>\r\n                <th>${value}</th>\r\n            </tr>\r\n        `;\r\n    }\r\n    smartTableDiv.className = \"smart-table\";\r\n    smartTableDiv.innerHTML = `\r\n        <h3>${this._smartDeviceId}</h3>\r\n        <table>\r\n        ${smartTable}\r\n        </table>\r\n    `;\r\n\r\n    return smartTableDiv;\r\n  }\r\n\r\n  public onMouseButton(ev: BeButtonEvent): boolean {\r\n    if (ev.isDown) return true;\r\n    IModelApp.notifications.outputMessage(\r\n      new NotifyMessageDetails(\r\n        OutputMessagePriority.Info,\r\n        `Element ${this._smartDeviceId} clicked`\r\n      )\r\n    );\r\n    IModelApp.viewManager.selectedView?.zoomToElements(this.elementId, {\r\n      animateFrustumChange: true,\r\n      standardViewId: StandardViewId.RightIso,\r\n    });\r\n    return true;\r\n  }\r\n}\r\n","import {\r\n  DecorateContext,\r\n  Decorator,\r\n  Marker,\r\n} from \"@bentley/imodeljs-frontend\";\r\nimport { UiFramework } from \"@bentley/ui-framework\";\r\nimport SmartDeviceAPI from \"../../SmartDeviceAPI\";\r\nimport { SmartDeviceMarker } from \"../markers/SmartDeviceMarker\";\r\n\r\nexport default class SmartDeviceDecorator implements Decorator {\r\n  private readonly id: string= \"SmartDeviceDecorator\";\r\n  private _markerSet: Marker[];\r\n\r\n  constructor() {\r\n    this._markerSet = [];\r\n\r\n    this.addMarkers();\r\n  }\r\n\r\n  public static async getSmartDeviceData() {\r\n    const query = `SELECT SmartDeviceId, SmartDeviceType, ECInstanceId, Origin \r\n            FROM DgnCustomItemTypes_HouseSchema.SmartDevice\r\n            WHERE Origin IS NOT NULL ORDER BY SmartDeviceType`;\r\n\r\n    const results = UiFramework.getIModelConnection()!.query(query);\r\n    const values = [];\r\n\r\n    for await (const row of results) {\r\n      values.push(row);\r\n    }\r\n\r\n    return values;\r\n  }\r\n\r\n  private async addMarkers() {\r\n    const values = await SmartDeviceDecorator.getSmartDeviceData();\r\n    const cloudData = await SmartDeviceAPI.getData();\r\n\r\n    values.forEach((value) => {\r\n      const smartDeviceMarker = new SmartDeviceMarker(\r\n        { x: value.origin.x, y: value.origin.y, z: value.origin.z },\r\n        { x: 20, y: 20 },\r\n        value.id,\r\n        value.smartDeviceId,\r\n        value.smartDeviceType,\r\n        cloudData[value.smartDeviceId]\r\n      );\r\n\r\n      this._markerSet.push(smartDeviceMarker);\r\n    });\r\n  }\r\n\r\n  decorate(context: DecorateContext): void {\r\n    this._markerSet.forEach((marker) => {\r\n      marker.addDecoration(context);\r\n    });\r\n  }\r\n}\r\n","export default class SmartDeviceAPI {\r\n    public static async getData(){\r\n        const response = await fetch(\"https://smarthomedata.z22.web.core.windows.net/\");\r\n        const deviceData = response.json();\r\n        return deviceData;\r\n    }\r\n}","import { IModelApp, StandardViewId } from \"@bentley/imodeljs-frontend\";\r\nimport * as React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport SmartDeviceDecorator from \"../decorators/SmartDeviceDecorator\";\r\n\r\nfunction SmartDeviceWidgetListComponent() {\r\n  const [smartTableList, setSmartTableList] = useState<JSX.Element[]>([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const values = await SmartDeviceDecorator.getSmartDeviceData();\r\n      const groupedByType: any = {};\r\n      const tableList: JSX.Element[] = [];\r\n\r\n      values.forEach((value) => {\r\n        if (groupedByType[value.smartDeviceType]) {\r\n            groupedByType[value.smartDeviceType].push(value);\r\n        } else {\r\n            groupedByType[value.smartDeviceType] = [value];\r\n        }\r\n      });\r\n\r\n      for (const [_, devices] of Object.entries(groupedByType)) {\r\n        (devices as any[]).forEach((device, i) => {\r\n          tableList.push(\r\n            <tr key={device.id}>\r\n              {i === 0 ? (\r\n                <th rowSpan={(devices as any[]).length}>\r\n                  {device.smartDeviceType}\r\n                </th>\r\n              ) : null}\r\n              <th\r\n                onClick={() => {\r\n                  IModelApp.viewManager.selectedView!.zoomToElements(\r\n                    device.id,\r\n                    {\r\n                      animateFrustumChange: true,\r\n                      standardViewId: StandardViewId.RightIso,\r\n                    }\r\n                  );\r\n                }}\r\n                className=\"clickable\"\r\n              >\r\n                {device.smartDeviceId}\r\n              </th>\r\n            </tr>\r\n          );\r\n        });\r\n      }\r\n      setSmartTableList(tableList);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <table className=\"smart-table\">\r\n      <tbody>\r\n        <tr>\r\n          <th>Smart Device Type</th>\r\n          <th>Smart Device Id</th>\r\n        </tr>\r\n        {smartTableList}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default SmartDeviceWidgetListComponent;\r\n","import { IModelApp } from \"@bentley/imodeljs-frontend\";\r\nimport {\r\n  AbstractWidgetProps,\r\n  CommonToolbarItem,\r\n  StagePanelLocation,\r\n  StagePanelSection,\r\n  StageUsage,\r\n  ToolbarItemUtilities,\r\n  ToolbarOrientation,\r\n  ToolbarUsage,\r\n  UiItemsProvider,\r\n} from \"@bentley/ui-abstract\";\r\nimport React from \"react\";\r\nimport SmartDeviceDecorator from \"../components/decorators/SmartDeviceDecorator\";\r\nimport SmartDeviceWidgetListComponent from \"../components/widgets/SmartDeviceWidgetListComponent\";\r\nimport Visualization from \"../Visualization\";\r\n\r\nexport class SmartDeviceUIItemsProvider implements UiItemsProvider {\r\n  public readonly id = \"SmartDeviceUIProvider\";\r\n  private _toggleWalls: boolean = false;\r\n\r\n  public provideToolbarButtonItems(\r\n    stageId: string,\r\n    stageUsage: string,\r\n    toolbarUsage: ToolbarUsage,\r\n    toolbarOrientation: ToolbarOrientation\r\n  ): CommonToolbarItem[] {\r\n    const toolbarButtonItems: CommonToolbarItem[] = [];\r\n\r\n    if (\r\n      stageUsage === StageUsage.General &&\r\n      toolbarUsage === ToolbarUsage.ContentManipulation &&\r\n      toolbarOrientation === ToolbarOrientation.Vertical\r\n    ) {\r\n      const toggleWallsButton = ToolbarItemUtilities.createActionButton(\r\n        \"ToggleWalls\",\r\n        1000,\r\n        \"icon-element\",\r\n        \"Toggle Walls Tool\",\r\n        () => {\r\n          this._toggleWalls = !this._toggleWalls;\r\n          Visualization.hideHouseExterior(\r\n            IModelApp.viewManager.selectedView!,\r\n            this._toggleWalls\r\n          );\r\n        }\r\n      );\r\n\r\n      const toggleMarkersButton = ToolbarItemUtilities.createActionButton(\r\n        \"ToggleMarkers\",\r\n        1000,\r\n        \"icon-visibility-half\",\r\n        \"Toggle Markers Tool\",\r\n        () => {\r\n          const smartDeviceDecorator = IModelApp.viewManager.decorators.find((dec: any) => dec.id === \"SmartDeviceDecorator\");\r\n          if(smartDeviceDecorator){\r\n            IModelApp.viewManager.dropDecorator(smartDeviceDecorator);\r\n          }else{\r\n            IModelApp.viewManager.addDecorator(new SmartDeviceDecorator());\r\n          }\r\n        }\r\n      )\r\n\r\n      toolbarButtonItems.push(toggleWallsButton, toggleMarkersButton);\r\n    }\r\n\r\n    return toolbarButtonItems;\r\n  }\r\n\r\n  public provideWidgets(\r\n    stageId: string,\r\n    stageUsage: string,\r\n    location: StagePanelLocation,\r\n    section?: StagePanelSection\r\n  ): ReadonlyArray<AbstractWidgetProps> {\r\n    const widgets: AbstractWidgetProps[] = [];\r\n\r\n    if (\r\n      location === StagePanelLocation.Right\r\n    ) {\r\n      const widget: AbstractWidgetProps = {\r\n        id: \"smartDeviceListWidget\",\r\n        label: \"Smart Devices\",\r\n        getWidgetContent: () => <SmartDeviceWidgetListComponent />\r\n      };\r\n\r\n      widgets.push(widget);\r\n    }\r\n\r\n    return widgets;\r\n  }\r\n}\r\n","import \"./App.scss\";\n\nimport { Viewer } from \"@bentley/itwin-viewer-react\";\nimport React, { useEffect, useState } from \"react\";\n\nimport AuthorizationClient from \"./AuthorizationClient\";\nimport { Header } from \"./Header\";\nimport {\n  IModelApp,\n  IModelConnection,\n  ScreenViewport,\n} from \"@bentley/imodeljs-frontend\";\nimport Visualization from \"./Visualization\";\nimport { DisplayStyleSettingsProps } from \"@bentley/imodeljs-common\";\nimport SmartDeviceDecorator from \"./components/decorators/SmartDeviceDecorator\";\nimport { SmartDeviceUIItemsProvider } from \"./providers/SmartDeviceUIItemsProvider\";\n\nconst App: React.FC = () => {\n  const [isAuthorized, setIsAuthorized] = useState(\n    AuthorizationClient.oidcClient\n      ? AuthorizationClient.oidcClient.isAuthorized\n      : false\n  );\n  const [isLoggingIn, setIsLoggingIn] = useState(false);\n\n  useEffect(() => {\n    const initOidc = async () => {\n      if (!AuthorizationClient.oidcClient) {\n        await AuthorizationClient.initializeOidc();\n      }\n\n      try {\n        // attempt silent signin\n        await AuthorizationClient.signInSilent();\n        setIsAuthorized(AuthorizationClient.oidcClient.isAuthorized);\n      } catch (error) {\n        // swallow the error. User can click the button to sign in\n      }\n    };\n    initOidc().catch((error) => console.error(error));\n  }, []);\n\n  useEffect(() => {\n    if (!process.env.IMJS_CONTEXT_ID) {\n      throw new Error(\n        \"Please add a valid context ID in the .env file and restart the application\"\n      );\n    }\n    if (!process.env.IMJS_IMODEL_ID) {\n      throw new Error(\n        \"Please add a valid iModel ID in the .env file and restart the application\"\n      );\n    }\n  }, []);\n\n  useEffect(() => {\n    if (isLoggingIn && isAuthorized) {\n      setIsLoggingIn(false);\n    }\n  }, [isAuthorized, isLoggingIn]);\n\n  const onLoginClick = async () => {\n    setIsLoggingIn(true);\n    await AuthorizationClient.signIn();\n  };\n\n  const onLogoutClick = async () => {\n    setIsLoggingIn(false);\n    await AuthorizationClient.signOut();\n    setIsAuthorized(false);\n  };\n\n  const onIModelConnected = (_imodel: IModelConnection) => {\n    console.log(\"IModel Loaded\");\n    document.title = `${_imodel.name} | iTwin Viewer React Sample`;\n\n    IModelApp.viewManager.onViewOpen.addOnce(async (vp: ScreenViewport) => {\n      const viewStyle: DisplayStyleSettingsProps = {\n        viewflags: { visEdges: false, shadows: true },\n      };\n      vp.overrideDisplayStyle(viewStyle);\n\n      Visualization.hideHouseExterior(vp);\n      IModelApp.viewManager.addDecorator(new SmartDeviceDecorator());\n    });\n  };\n\n  return (\n    <div className=\"viewer-container\">\n      <Header\n        handleLogin={onLoginClick}\n        loggedIn={isAuthorized}\n        handleLogout={onLogoutClick}\n      />\n      {isLoggingIn ? (\n        <span>\"Logging in....\"</span>\n      ) : (\n        isAuthorized && (\n          <Viewer\n            contextId={process.env.IMJS_CONTEXT_ID ?? \"\"}\n            iModelId={process.env.IMJS_IMODEL_ID ?? \"\"}\n            authConfig={{ oidcClient: AuthorizationClient.oidcClient }}\n            onIModelConnected={onIModelConnected}\n            uiProviders={[new SmartDeviceUIItemsProvider()]}\n          />\n        )\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./index.scss\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2lOTj\",\"buttonContainer\":\"Header_buttonContainer__1DT-o\"};"],"sourceRoot":""}